*******************************
**BEGIN type951.ddck
*******************************
    
*****************************************
** Contact person : Dani Carbonell  
** Creation date  : 05.02.2019   
** Last changes   : 20.05.2022 
*****************************************

***************************************************************************
** Description: 
** Ground source heat exchanger model using the EWS model
** extended to include user defined g-functions
** TODO: online plotter and user defined printer should be moved away
***************************************************************************

***********************************
** inputs from hydraulic solver
***********************************
EQUATIONS #
TIn = GT(MfrIn,0)*@temp(In) + LT(MfrIn,0)*@revtemp(Out) ! (C)
MfrIn = @mfr(In)  ! (kg/h) not possible to revert the flow
** 
Mfr = EQL(calcRand,1)*ABS(MfrIn)/NProbes + NOT(EQL(calcRand,1))*ABS(MfrIn)
Cp = @cp(In)
Rho = @rho(In)


***********************************
** outputs to hydraulic solver
***********************************
EQUATIONS 1
@temp(Out) = TOut


******************************************************************************************
** outputs to energy balance in kWh and ABSOLUTE value
** Following this naming standard  qSysIn_name, qSysOut_name, elSysIn_name, elSysOut_name
******************************************************************************************
EQUATIONS 1
!qSysIn_Ghx = Q_kW
!@energy(out, heat, , loss, total) = QLossTot    ! (kW)
@energy(out, heat, IntTot) = -Q_kW     ! (kW)

***********************************
** Dependencies with other ddck
***********************************
CONSTANTS #
MfrNom = $HpMfrEvapNom  ! -> is being defined in the control !10000

! not used
!ExtrationPower = 40						! W/m
!qExtractHp = sizeHpUsed-sizeHpUsed/4		! we assume a COP of 4 qEvap = Qcond  - Wcp = Qcond  - Qcond /COP
!lBoreholeTotal = 1000*qExtractHp/ExtrationPower



** Re-assing here the variables necessary from other types
** variableInternal = variableExternal
** Exception: those from general variables

EQUATIONS #
TAmbAvg = $TAmb

***********************************
** outputs to other ddck
***********************************

** Add here the outputs of the TYPE or TYPES that will be used in other types
** Exception: those for printers and so on dont need to be here.

***********************************
** Begin CONSTANTS
***********************************

** Pre-conditioning
CONSTANTS 5  
PreOn = 0
QDemPreBis = 40/8.76		! 40 MWh* 1000 kW/8760 MWh		! JS this could be wrong, because in the fortran code is a comment, that this value is in W, not kW
NYearsPre = 5
NWeeksPre = 52*NYearsPre*PreOn
QDemPre = PreOn * QDemPreBis

** Model parameters
CONSTANTS #
DProbes = 0.032                         ! Inner diameter of probes, m
LProbes = 200!lBoreholeTotal/NProbes 	! Length of probes, m
!NProbes = 18 ! Defined in specific ddck
SteadyStateBrineGshx = 1		! 1: steady state, 0: transient calculation of brine
calcBTR = 4 					! 1: calculate R1 and R2 internally 2: R1 input; R2 calculated internally 3: Rb input; R1=f(Rb), R2 calculated internally  4: Ra, Rb input; R1=f(Ra), R2=f(Ra,Rb) calculated internally
calcRand = 2                    ! 1: old Randaussen approach of EWS. If nBorehole>1 the MfrGHX/Nbore, 2: Lamarche-g-Functions, 3: read-in g-function
R1RbRa = 0.1     				! mK/W R1 for calBTR = 2, Rb for calcBTR = 3, Ra for calcBTR = 4, unused for calcBTR = 1
Rb = 0.35     					! mK/W Rb for calcBTR = 4, otherwise unused
NYearsPrinted = 1				! nYearsPrintedGFunction

RaGroOut = 1.5!2
RaGroMean = 1
gridFactor = 2!2.5
DBor = 0.18
TAxialGradient = 0.025 			! K/m
CpFill = 1.65     				! 11: specific heat capacity of the filling material, kJ/kgK
RhoFill = 2000     				! 12: density of the filling material, kg/m3
lambdaFill = 2 !7.2     		! 13: lambda of the filling material, kJ/hmK JS: According to fortran code this value is in W/mK
lambdaBrine = 0.449 			! 1.6164		! 14: lambda of the brine, kJ/hmK JS: According to fortran code this value is in W/mK
NuBrine = 0.00000646     		! 15: kinematic viscosity of the brine, m2/sec
dTSoilAir = 1     				! delta-T between soil-surface and air, K

CONSTANTS 21
NRadial = 6      						! 1: Nb. Of radial layers
NAxial = 5      						! 2: Nb. Of axial layers
CpGround = 0.8     						! 3: Ground specific heat, axial layer-1
rhoGround = 2500   						! 4: Ground density, axial layer-1
lambdaGround = 2 						! 7.2		! 5: Ground thermal conductivity, axial layer-1 JS: According to fortran code this value is in W/mK
**as many as NAxial
CpGroundLayer1 = CpGround				! 6: Ground specific heat, axial layer-1
rhoGroundLayer1 = rhoGround				! 7: Ground density, axial layer-1
lambdaGroundLayer1 = lambdaGround		! 8: Ground thermal conductivity, axial layer-1
CpGroundLayer2 = CpGround				! 9: Ground specific heat, axial layer-2
rhoGroundLayer2 = rhoGround				! 10: Ground density, axial layer-2
lambdaGroundLayer2 = lambdaGround		! 11: Ground thermal conductivity, axial layer-2
CpGroundLayer3 = CpGround				! 12: Ground specific heat, axial layer-3
rhoGroundLayer3 = rhoGround				! 13: Ground density, axial layer-3
lambdaGroundLayer3 = lambdaGround		! 14: Ground thermal conductivity, axial layer-3
CpGroundLayer4 = CpGround				! 15: Ground specific heat, axial layer-4
rhoGroundLayer4 = rhoGround				! 16: Ground density, axial layer-4
lambdaGroundLayer4 = lambdaGround		! 17: Ground thermal conductivity, axial layer-4
CpGroundLayer5 = CpGround				! 18: Ground specific heat, axial layer-5
rhoGroundLayer5 = rhoGround				! 19: Ground density, axial layer-5
lambdaGroundLayer5 = lambdaGround		! 20: Ground thermal conductivity, axial layer-5
nParType951 = 38+NAxial

***********************************
** Begin TYPE 
***********************************
UNIT 85 TYPE 951		! EWS model Ground Heat Exchanger modified by SPF
PARAMETERS nParType951
steadyStateBrineGshx		! 1: steady state (1) or transient (0) calculation of brine
calcBTR      				! 2: calculation of thermal resistance: 1: calculate R1 and R2 internally, 2: R1 is an input, R2 internally, 3: R1 = f(Rb), R2 internally, 4: R1 = f(Ra), R2 = f(Ra, Rb)
calcRand     				! 3: old Randaussen approach of EWS, 2: Lamarche-g-Functions, 3: read-in g-function
unitGfunc 				    ! 4: logical unit number for g-function
MfrNom     			        ! 5: mass flow rate of the brine used to calculate the heat transfer coefficient alpha1, kg/h
RaGroOut        			! 6: radius of outer boundary r_m of simulation area, m
RaGroMean   				! 7: radius for average temperature
gridFactor   				! 8: grid factor f, -
LProbes   				    ! 9: length of heat exchanger probe (Sondenl�nge), m
DProbes   				    ! 10: inner diameter of the pipes, m
DBor         			    ! 11: borehole diameter, m
TAxialGradient       		! 12: axial temperature gradient (downward) in the earth at the start of the simulation, K/m
TambAvg     				! 13: average annual air temperature, �C
dTsoilAir     				! 14: average yearly temperature difference between soil surface and air, K
CpFill            			! 15
RhoFill      				! 16
lambdaFill   				! 17
Cp     		    			! 18: specific heat of the brine, kJ/kgK
Rho     					! 19: density of the brine, kg/m3
lambdaBrine     			! 20: lambda of the brine, W/mK (?)
NuBrine       				! 21
NWeeksPre     				! 22: Number of weeks of ground preconditionning
QDemPre    			 	    ! 23: Extraction power during preconditionning
NRadial    					! 24: Nb. Of radial layers
NAxial     					! 25: Nb. Of axial layers
CpGroundLayer1      		! 26: Ground specific heat, axial layer-1
rhoGroundLayer1     		! 27: Ground density, axial layer-1
lambdaGroundLayer1  		! 28: Ground thermal conductivity, axial layer-1
CpGroundLayer2      		! 29: Ground specific heat, axial layer-2
rhoGroundLayer2     		! 30: Ground density, axial layer-2
lambdaGroundLayer2  		! 31: Ground thermal conductivity, axial layer-2
CpGroundLayer3      		! 32: Ground specific heat, axial layer-3
rhoGroundLayer3     		! 33: Ground density, axial layer-3
lambdaGroundLayer3  		! 34: Ground thermal conductivity, axial layer-3
CpGroundLayer4      		! 35: Ground specific heat, axial layer-4
rhoGroundLayer4     		! 36: Ground density, axial layer-4
lambdaGroundLayer4  		! 37: Ground thermal conductivity, axial layer-4
CpGroundLayer5      		! 38: Ground specific heat, axial layer-5
rhoGroundLayer5     		! 39: Ground density, axial layer-5
lambdaGroundLayer5  		! 40: Ground thermal conductivity, axial layer-5
R1RbRa     					! R1 for calBTR = 2, Rb for calcBTR = 3, Ra for calcBTR = 4, unused for calcBTR = 1
Rb     						! Rb for calcBTR = 4, otherwise unused
nYearsPrinted     			! nYearsPrintedGFunction
INPUTS 2     
TIn		! Temperature of GHX inlet, �C
Mfr		! Mass flow rate for all borehole heat exchanger, kg/h
0.0    0.0 

*********************
****** OUTPUTS ******
*********************

EQUATIONS #
TOut    = [85,1] ! Outlet temperature [°C]
MfrOut  = [85,2] ! Outlet mass flow rate [kg/h]
Q_kW    = [85,3] ! Power extracted [kW]
TEle    = [85,4] ! Element by element multiplication
PLosses = [85,5] ! Pressure drop
TRT     = [85,6] ! K temp. drop at RANDAUSSEN

TDown1  = [85,7] ! Downstreaming fluid temperature 1 [°C]
TDown2  = [85,8] ! Downstreaming fluid temperature 2 [°C]
TDown3  = [85,9] ! Downstreaming fluid temperature 3 [°C]
TDown4  = [85,10] ! Downstreaming fluid temperature 4 [°C]
TDown5  = [85,11] ! Downstreaming fluid temperature 5 [°C]

TUp1    = [85,12] ! Upstreaming fluid temperature 1 [°C]
TUp2    = [85,13] ! Upstreaming fluid temperature 2 [°C]
TUp3    = [85,14] ! Upstreaming fluid temperature 3 [°C]
TUp4    = [85,15] ! Upstreaming fluid temperature 4 [°C]
TUp5    = [85,16] ! Upstreaming fluid temperature 5 [°C]

T11     = [85,17] ! Radial 1, axial 1 temperature [°C]
T12     = [85,18] ! Radial 1, axial 2 temperature [°C]
T13     = [85,19] ! Radial 1, axial 3 temperature [°C]
T14     = [85,20] ! Radial 1, axial 4 temperature [°C]
T15     = [85,21] ! Radial 1, axial 5 temperature [°C]

T21     = [85,22] ! Radial 2, axial 1 temperature [°C]
T22     = [85,23] ! Radial 2, axial 2 temperature [°C]
T23     = [85,24] ! Radial 2, axial 3 temperature [°C]
T24     = [85,25] ! Radial 2, axial 4 temperature [°C]
T25     = [85,26] ! Radial 2, axial 5 temperature [°C]

T31     = [85,27] ! Radial 3, axial 1 temperature [°C]
T32     = [85,28] ! Radial 3, axial 2 temperature [°C]
T33     = [85,29] ! Radial 3, axial 3 temperature [°C]
T34     = [85,30] ! Radial 3, axial 4 temperature [°C]
T35     = [85,31] ! Radial 3, axial 5 temperature [°C]

T41     = [85,32] ! Radial 4, axial 1 temperature [°C]
T42     = [85,33] ! Radial 4, axial 2 temperature [°C]
T43     = [85,34] ! Radial 4, axial 3 temperature [°C]
T44     = [85,35] ! Radial 4, axial 4 temperature [°C]
T45     = [85,36] ! Radial 4, axial 5 temperature [°C]

T51     = [85,37] ! Radial 5, axial 1 temperature [°C]
T52     = [85,38] ! Radial 5, axial 2 temperature [°C]
T53     = [85,39] ! Radial 5, axial 3 temperature [°C]
T54     = [85,40] ! Radial 5, axial 4 temperature [°C]
T55     = [85,41] ! Radial 5, axial 5 temperature [°C]

T61     = [85,42] ! Radial 6, axial 1 temperature [°C]
T62     = [85,43] ! Radial 6, axial 2 temperature [°C]
T63     = [85,44] ! Radial 6, axial 3 temperature [°C]
T64     = [85,45] ! Radial 6, axial 4 temperature [°C]
T65     = [85,46] ! Radial 6, axial 5 temperature [°C]

TGro1   = [85,47] ! Ground, axial 1 temperature [°C]
TGro2   = [85,48] ! Ground, axial 2 temperature [°C]
TGro3   = [85,49] ! Ground, axial 3 temperature [°C]
TGro4   = [85,50] ! Ground, axial 4 temperature [°C]
TGro5   = [85,51] ! Ground, axial 5 temperature [°C]

Q_kWExt = GT(Q_kW,0)* Q_kW		! Changed automatically
Q_kWReg = LT(Q_kW,0)* Q_kW     ! Changed automatically


!the whole radial profile (6 values + boundary) at the center of the borehole lenght (axial 6 values, so at 3) (T(3,1)-T(3,2)...T(3,boundary condition)
EQUATIONS #
TGroundAve = (T13 + T23 + T33 + T43 + T53 + T63 + TGro3) / 7
dR = RaGroOut/NRadial
M1 = $PI*((1*dR)^2-(0*dR)^2)*LProbes*rhoGround
M2 = $PI*((2*dR)^2-(1*dR)^2)*LProbes*rhoGround
M3 = $PI*((3*dR)^2-(2*dR)^2)*LProbes*rhoGround
M4 = $PI*((4*dR)^2-(3*dR)^2)*LProbes*rhoGround
M5 = $PI*((5*dR)^2-(4*dR)^2)*LProbes*rhoGround
M6 = $PI*((6*dR)^2-(5*dR)^2)*LProbes*rhoGround
MTot = M1+M2+M3+M4+M5

T1Avg = (T11+T12+T13+T14+T15)/5
T2Avg = (T21+T22+T23+T24+T25)/5
T3Avg = (T31+T32+T33+T34+T35)/5
T4Avg = (T41+T42+T43+T44+T45)/5
T5Avg = (T51+T52+T53+T54+T55)/5

TAvg = 1/MTot*(T1Avg*M1+T2Avg*M2+T3Avg*M3+T4Avg*M4+T5Avg*M5)


***********************************
** Monthly printer
***********************************
CONSTANTS 1
unitPrinterMo = 88

ASSIGN    temp\GHX_MO.Prt      unitPrinterMo
UNIT 88 Type 46		! Printegrator Monthly Values for System
PARAMETERS 7
unitPrinterMo		! 1: Logical unit number, -
-1     				! 2: Logical unit for monthly summaries, -
1     				! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1     				! 4: Printing & integrating interval, h. -1 for monthly integration
2     				! 5: Number of inputs to avoid integration, -
1     				! 6: Output number to avoid integration
2     				! 7: Output number to avoid integration
INPUTS 5
$Time  TRT Q_kW   Q_kWExt	Q_kWReg
**
$Time  TRT Q_kW   Q_kWExt	Q_kWReg

***********************************
** hourly printer
***********************************
CONSTANTS 1
unitPrintHo = 33

ASSIGN    temp\BOHX_HO.Prt    unitPrintHo

UNIT 34 TYPE 46     ! Printegrator Monthly Values for System
PARAMETERS #
unitPrintHo		! 1: Logical unit number, -
-1						! 2: Logical unit for monthly summaries, -
1             			! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
1             			! 4: Printing & integrating interval, h. -1 for monthly integration
11             			! 5: Number of inputs to avoid integration, -
1             			! 6: Output number to avoid integration
2             			! 7: Output number to avoid integration
3             			! 8: Output number to avoid integration
4             			! 9: Output number to avoid integration
5             			! 10: Output number to avoid integration
6             			! 11: Output number to avoid integration
7             			! 12: Output number to avoid integration
8             			! 13: Output number to avoid integration
9             			! 14: Output number to avoid integration
10             			! 15: Output number to avoid integration
11             			! 16: Output number to avoid integration

INPUTS #
TOut TRT TIn T13 T23 T33 T43 T53 T63 TGro3 !1-10
TAvg Q_kW Q_kWExt Q_kWReg !11-14
**
TOut TRT TIn T13 T23 T33 T43 T53 T63 TGro3 !1-10
TAvg Q_kW Q_kWExt Q_kWReg !11-14

***************************************************************
**BEGIN HP energy balance printer
***************************************************************
EQUATIONS #
QIn = MfrIn * Cp * (TIn - TOut) / 3600 ! (kW)
qImb = -Q_kW + Q_kW  ! (kW) energy imbalance
CONSTANTS 1
unitPrint_EBal=270
ASSIGN temp\EBal_GhxGeneric.prt unitPrint_EBal
UNIT 270 Type 46
PARAMETERS 5
unitPrint_EBal !1: Logical unit number
-1 !2: for monthly summaries
1  !3: 1:print at absolute times
-1 !4: -1: monthly integration
0  !5 number of outputs to avoid integration
!1  !6 output number to avoid integration
INPUTS #
qImb Q_kW Q_kW
**
qImb Q_kW Q_kW

***********************************
** Online plotter
***********************************
UNIT 86 TYPE 65		! Onlint Plotter Ground Heat Exchanger
**       
PARAMETERS 12     
#   		! 1: Nb. of left-axis variables
#     		! 2: Nb. of right-axis variables
-20     	! 3: Left axis minimum
100    		! 4: Left axis maximum
-10000 		! 5: Right axis minimum
10000		! 6: Right axis maximum
NPlotsPerSim     		! 7: Number of plots per simulation
12     		! 8: X-axis gridpoints
1     		! 9: Shut off Online w/o removing
-1     		! 10: Logical unit for output file
0     		! 11: Output file units
0     		! 12: Output file delimiter
INPUTS #
TOut TRT TIn T13 T23 T33 T43 T53 T63 TGro3 | Q_kW Q_kWExt Q_kWReg
****
TOut TRT TIn T13 T23 T33 T43 T53 T63 TGro3 | Q_kW Q_kWExt Q_kWReg
LABELS  3
Temperatures     
MassFlow 
GHX    

*******************************
**END type951.ddck
*******************************